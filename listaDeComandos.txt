--------------------------------
-- Comando utiles en git
--Deshacer cambios en un archivo 
git checkout -- nombre archivo
-- subir toda una carpeta 
git add /nombreCarpeta
-- Agregar algunos archivos, para este ejemplo subira todas imagenes png
git add *.png
-- Excluir un archivo cuando se agrego
git reset nombre archivo
-- Agrega todos los txt de todo el proyecto
git add "*.txt"
-- Agrega todos los txt en el directorio actual
git add "*.txt
-- Agregar todos los archivos
git add --all
-- Agrega los archivos que listemos
git add <lista de archivos>
-- Agrega todos los pdfs dentro de la carpeta PDFS
git add pdfs/*.pdf
-- Ver cambios que hubo en un archivos
git diff
-- Ver cambios que de un archivo en stage
git diff --staged
-- Quitar los archivos de staged "memoria"
git reset HEAD nombreArchivo
-- revertir un commit, este es el mas suave
git reset --soft numero de commit
-- revertir un commit, es el mas duro
git reset --hard numero de commit
-- Recuperar datos en el git, muestra una lista de todo lo que hemos hecho, commits, reset etc.
git reflog
-- para recuperar todo los cambios copiamos en hash del commit y ejecutamos
git reset --hard hash del commit	
-- Crear un rama 
git branch nombre-rama
-- Ver las ramas
git branch
-- Hacer un merge
se pasa a la rama donde se quiere fusionar y se hace un git merge nombre-rama
-- Borrar una rama
git branch -d nombre-rama
-- Creando un tag
git tag nombreDelTag
-- Borrar un tag
git tag -d nombreDelTag
-- Agregar un tag a un commit
git tag -a "nota" 5c2732cce9aca7f9168b125f8a80f575e56376ee -m "mensaje"
-- Colocar los archivos en un area temporal
git stash
-- ver la lista de los stash
git stahs list
-- integrar lo del stash a la rama se hace con
git stash pop
-- borrar un stash 
git stash drop
-- borrar todos los stash
git stash clear
-- git rebase sirve para
* ordenar commits
* corregir mensajes de los commits
* unir commits
* separar commits
